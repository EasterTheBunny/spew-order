openapi: 3.0.3
info:
  title: Cloud Exchange REST API
  version: 0.0.1
paths:
  /api/accounts:
    get:
      description: Retrieve all account information
      responses:
        200:
          description: OK
          content:
            'application/json':
              schema:
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Account'
                  error:
                    $ref: '#/components/schemas/ResponseError'
  /api/accounts/{accountID}:
    parameters:
      - $ref: '#/components/parameters/AccountPathParam'
    get:
      description: Retrieve account information
      responses:
        200:
          description: OK
          content:
            'application/json':
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Account'
                  error:
                    $ref: '#/components/schemas/ResponseError'
  /api/accounts/{accountID}/transactions:
    parameters:
      - $ref: '#/components/parameters/AccountPathParam'
    get:
      description: Retrieve account transactions
      responses:
        200:
          description: OK
          content:
            'application/json':
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/TransactionList'
                  error:
                    $ref: '#/components/schemas/ResponseError'
  /api/accounts/{accountID}/orders:
    parameters:
      - $ref: '#/components/parameters/AccountPathParam'
    post:
      description: Publishes an order to the order book
      requestBody: 
        description: >
          Order request
          Valid order pairs include BTC-ETH
        required: true
        content: 
          'application/json': 
            schema: 
              $ref: '#/components/schemas/OrderRequest'
      responses: 
        200: 
          description: OK
          content: 
            'application/json': 
              schema: 
                properties:
                  data:
                    $ref: '#/components/schemas/BookOrder'
        409:
          description: Insufficient account balance
          content:
            'application/json':
              schema:
                properties:
                  error:
                    $ref: '#/components/schemas/ResponseError'
    get:
      description: Retrieve order list
      responses:
        200:
          description: OK
          content:
            'application/json':
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/BookOrderList'
                  error:
                    $ref: '#/components/schemas/ResponseError'
  /api/accounts/{accountID}/orders/{orderID}:
    parameters:
      - $ref: '#/components/parameters/AccountPathParam'
      - $ref: '#/components/parameters/OrderPathParam'
    get:
      description: Retrieve order item
      responses:
        200:
          description: OK
          content:
            'application/json':
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/BookOrder'
                  error:
                    $ref: '#/components/schemas/ResponseError'
components:
  parameters:
    AccountPathParam:
      in: path
      name: accountID
      required: true
      schema:
        type: string
      description: The uuid account identifier
    OrderPathParam:
      in: path
      name: orderID
      required: true
      schema:
        type: string
      description: The uuid order identifier
  schemas:
    ResponseError:
      type: object
      required:
      - detail
      properties:
        detail:
          type: string
    QueryTime:
      type: integer
      format: int64
      description: Time in seconds for query to complete
    ActionType:
      type: string
      enum:
      - BUY
      - SELL
      description: >
        Action type:
        * `BUY` - use base currency to buy target currency
        * `SELL` - sell target currency for base currency
    SymbolType:
      type: string
      enum:
      - BTC
      - ETH
      description: >
        Symbol Type:
        * `BTC` - bitcoin currency identifier
        * `ETH` - ethereum currency identifier
    TransactionType:
      type: string
      enum:
      - ORDER
      - DEPOSIT
      - TRANSFER
      description: >
        Transaction Type:
        * `ORDER` - transaction resulting from a match on the order book
        * `DEPOSIT` - transaction resulting from a funding deposit
        * `TRANSFER` - transaction resulting from a funding withdrawal
    OrderStatus:
      type: string
      enum:
      - OPEN
      - PARTIAL
      - FILLED
      - CANCELLED
      description: >
        Symbol Type:
        * `OPEN` - incomplete order
        * `PARTIAL` - partial order
        * `FILLED` - filled order
        * `CANCELLED` - cancelled order
    CurrencyValue:
      type: string
    Account:
      type: object
      description: Balances account
      required:
      - id
      properties:
        id:
          type: string
        balances:
          $ref: '#/components/schemas/BalanceList'
    TransactionList:
      type: array
      items:
        $ref: '#/components/schemas/Transaction'
    Transaction:
      type: object
      description: Account balance change
      required:
      - type
      - symbol
      - quantity
      - fee
      - orderid
      - timestamp
      properties:
        type:
          $ref: '#/components/schemas/TransactionType'
        symbol:
          $ref: '#/components/schemas/SymbolType'
        quantity:
          $ref: '#/components/schemas/CurrencyValue'
        fee:
          $ref: '#/components/schemas/CurrencyValue'
        orderid:
          type: string
        timestamp:
          type: string
    BalanceList:
      type: array
      items:
        $ref: '#/components/schemas/BalanceItem'
    BalanceItem:
      type: object
      required:
      - symbol
      - quantity
      - funding
      properties:
        symbol:
          $ref: '#/components/schemas/SymbolType'
        quantity:
          $ref: '#/components/schemas/CurrencyValue'
        funding:
          type: string
          description: Address hash for funding this balance
    OrderRequest:
      type: object
      description: Request to create a new order on the order book
      required:
      - base
      - target
      - action
      - type
      properties:
        base:
          $ref: '#/components/schemas/SymbolType'
        target:
          $ref: '#/components/schemas/SymbolType'
        action:
          $ref: '#/components/schemas/ActionType'
        type:
          $ref: '#/components/schemas/OrderRequestType'
    OrderRequestType:
      oneOf:
        - $ref: '#/components/schemas/MarketOrderRequest'
        - $ref: '#/components/schemas/LimitOrderRequest'
      discriminator:
        propertyName: name
    OrderType:
      type: object
      required:
      - name
      properties:
        name:
          type: string
          enum:
          - MARKET
          - LIMIT
          description: >
            Order type:
            * `MARKET` - order type used to buy or sell at market value
            * `LIMIT` - used to set buy or sell limit
    MarketOrderRequest:
      allOf:
        - $ref: '#/components/schemas/OrderType'
        - type: object
          required:
          - base
          - quantity
          properties:
            base:
              $ref: '#/components/schemas/SymbolType'
            quantity:
              $ref: '#/components/schemas/CurrencyValue'
    LimitOrderRequest:
      allOf:
        - $ref: '#/components/schemas/OrderType'
        - type: object
          required:
          - base
          - price
          - quantity
          properties:
            base:
              $ref: '#/components/schemas/SymbolType'
            price:
              $ref: '#/components/schemas/CurrencyValue'
            quantity:
              $ref: '#/components/schemas/CurrencyValue'
    BookOrder:
      type: object
      required:
      - status
      - guid
      - order
      properties:
        guid:
          type: string
        status:
          $ref: '#/components/schemas/OrderStatus'
        order:
          $ref: '#/components/schemas/OrderRequest'
    BookOrderList:
      type: array
      items:
        $ref: '#/components/schemas/BookOrder'